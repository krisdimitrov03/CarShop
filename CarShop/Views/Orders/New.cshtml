@using CarShop.Core.Models
@model OrderCreateViewModel
@{
	ViewData["Title"] = "Customize";
	var colors = (List<SelectListItem>)ViewBag.Colors;
	var transmissionTypes = (List<SelectListItem>)ViewBag.TransmissionTypes;
	var extras = (List<SelectListItem>)ViewBag.Extras;
}

<link rel="stylesheet" href="~/css/style/costumize-style.css">

<div class="main">
	<h1>Customize Vehicle</h1>
	<form method="post">
		<select asp-for="ExtraIds" id="extras-select" style="display: none;">
		</select>

		<input type="hidden" asp-for="CarId"/>

		<div class="vehicle-section" style="background: linear-gradient(rgba(0, 0, 0, 0.5),
            rgba(0, 0, 0, 0.5)),
			url('@Model.CarImageUrl');
			background-position: center;
			background-size: cover;">

			<div class="id">
				<h3>@(Model.Car.Split()[1])</h3>
				<h4>@(Model.Car.Split()[0])</h4>
			</div>
		</div>

		<div class="middle">
			<div class="select">
				<h4>Color</h4>
				<select asp-for="ColorId" asp-items="colors" id="color-select">
				</select>
			</div>

			<div class="select">
				<h4>Transmission Type</h4>
				<select asp-for="TransmissionTypeId" asp-items="transmissionTypes" id="transmission-select">
				</select>
			</div>
		</div>

		<div class="extras">
			<h4>Extras</h4>
			<div class="extras-area">
				@foreach (var extra in extras)
				{
					<div class="extra">
						<input type="checkbox" name="@extra.Value" value="@extra.Value">
						<label for="@extra.Value">@extra.Text</label>
					</div>
				}
			</div>
		</div>

		<div class="bottom">
			<p>€ @Model.Price</p>
			<button type="submit">Order</button>
		</div>
	</form>
</div>

<script src="~/js/order-extras.js"></script>
